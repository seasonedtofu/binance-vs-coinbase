{"version":3,"sources":["Coin.js","App.js","index.js"],"names":["Coin","name","image","symbol","price","className","src","alt","App","useState","coins","setCoins","search","binanceBTC","setBinanceBTC","binanceETH","setBinanceETH","coinbaseBTC","setCoinbaseBTC","coinbaseETH","setCoinbaseETH","useEffect","getCoinGecko","getBinanceBTC","getCoinbaseBTC","getBinanceETH","getCoinbaseETH","axios","get","then","res","parseFloat","data","toFixed","catch","error","console","log","amount","filteredCoins","filter","coin","toLowerCase","includes","map","current_price","id","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mQAsBeA,EAnBF,SAAC,GAA+B,IAA9BC,EAA6B,EAA7BA,KAAKC,EAAwB,EAAxBA,MAAMC,EAAkB,EAAlBA,OAAOC,EAAW,EAAXA,MAC7B,OACI,8BACI,qBAAKC,UAAU,iBAAf,SACI,sBAAKA,UAAU,WAAf,UACI,sBAAKA,UAAU,OAAf,UACI,qBAAKC,IAAKJ,EAAOK,IAAI,WACpB,6BAAKN,IACL,mBAAGI,UAAU,cAAb,SAA4BF,OAEjC,qBAAKE,UAAU,YAAf,SACI,oBAAGA,UAAU,aAAb,cAA4BD,eCwGrCI,MAjHf,WAAgB,IAAD,EACaC,mBAAS,IADtB,mBACNC,EADM,KACCC,EADD,OAEIF,mBAAS,IAAnBG,EAFM,sBAGuBH,mBAAS,IAHhC,mBAGNI,EAHM,KAGMC,EAHN,OAIuBL,mBAAS,IAJhC,mBAINM,EAJM,KAIMC,EAJN,OAKyBP,mBAAS,IALlC,mBAKNQ,EALM,KAKOC,EALP,OAMyBT,mBAAS,IANlC,mBAMNU,EANM,KAMOC,EANP,KAQbC,qBAAU,WACRC,IACAC,IACAC,IACAC,IACAC,MACC,IAEH,IAAMH,EAAgB,WACpBI,IACGC,IACC,0DAEDC,MAAK,SAAAC,GACJhB,EAAciB,WAAWD,EAAIE,KAAK5B,OAAO6B,QAAQ,OAElDC,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,OAG1BX,EAAiB,WACrBG,IACGC,IACC,mDAEDC,MAAK,SAAAC,GACJZ,EAAea,WAAWD,EAAIE,KAAKA,KAAKM,QAAQL,QAAQ,OAEzDC,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,OAG1BV,EAAgB,WACpBE,IACGC,IACC,0DAEDC,MAAK,SAAAC,GACJd,EAAce,WAAWD,EAAIE,KAAK5B,OAAO6B,QAAQ,OAElDC,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,OAG1BT,EAAiB,WACrBC,IACGC,IACC,mDAEDC,MAAK,SAAAC,GACJV,EAAeW,WAAWD,EAAIE,KAAKA,KAAKM,QAAQL,QAAQ,OAEzDC,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,OAG1Bb,EAAe,WACnBK,IACGC,IACC,sJAEDC,MAAK,SAAAC,GACJnB,EAASmB,EAAIE,SAEdE,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,OAG1BI,EAAgB7B,EAAM8B,QAAO,SAAAC,GAAI,OACrCA,EAAKxC,KAAKyC,cAAcC,SAAS/B,EAAO8B,kBAqB1C,OACE,sBAAKrC,UAAU,WAAf,UACE,6EACCkC,EAAcK,KAAI,SAAAH,GACjB,OACE,cAAC,EAAD,CAEExC,KAAMwC,EAAKxC,KACXG,MAAOqC,EAAKI,cACZ1C,OAAQsC,EAAKtC,OACbD,MAAOuC,EAAKvC,OAJPuC,EAAKK,OAQhB,oBAAIzC,UAAU,iBAAd,iCA/BCQ,EAAWI,EACL,sBAAKZ,UAAU,YAAf,4CAA2DY,EAA3D,6BAAkGJ,KAGlG,sBAAKR,UAAU,YAAf,2CAA0DQ,EAA1D,8BAAiGI,KAKvGF,EAAWI,EACL,sBAAKd,UAAU,YAAf,6CAA4Dc,EAA5D,6BAAmGJ,KAGnG,sBAAKV,UAAU,YAAf,4CAA2DU,EAA3D,8BAAkGI,SCzF/G4B,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.737cb1f6.chunk.js","sourcesContent":["import React from 'react'\r\nimport './Coin.css';\r\n\r\nconst Coin = ({name,image,symbol,price}) => {\r\n    return (\r\n        <div>\r\n            <div className='coin-container'>\r\n                <div className='coin-row'>\r\n                    <div className='coin'>\r\n                        <img src={image} alt='crypto'/>\r\n                         <h1>{name}</h1>\r\n                         <p className='coin-symbol'>{symbol}</p>\r\n                    </div>\r\n                    <div className='coin-data'>\r\n                        <p className='coin-price'>${price}</p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Coin\r\n","import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport './App.css';\r\nimport Coin from './Coin';\r\n\r\nfunction App() {\r\n  const [coins, setCoins] = useState([]);\r\n  const [search] = useState('');\r\n  const [binanceBTC, setBinanceBTC] = useState('');\r\n  const [binanceETH, setBinanceETH] = useState('');\r\n  const [coinbaseBTC, setCoinbaseBTC] = useState('');\r\n  const [coinbaseETH, setCoinbaseETH] = useState('');\r\n\r\n  useEffect(() => {\r\n    getCoinGecko();\r\n    getBinanceBTC();\r\n    getCoinbaseBTC();\r\n    getBinanceETH();\r\n    getCoinbaseETH();\r\n  }, []);\r\n\r\n  const getBinanceBTC = () => {\r\n    axios\r\n      .get(\r\n        'https://api.binance.com/api/v3/avgPrice?symbol=BTCUSDT'\r\n      )\r\n      .then(res => {\r\n        setBinanceBTC(parseFloat(res.data.price).toFixed(2))\r\n      })\r\n      .catch(error => console.log(error));   \r\n  }\r\n\r\n  const getCoinbaseBTC = () => {\r\n    axios\r\n      .get(\r\n        'https://api.coinbase.com/v2/prices/BTC-USD/spot'\r\n      )\r\n      .then(res => {\r\n        setCoinbaseBTC(parseFloat(res.data.data.amount).toFixed(2))\r\n      })\r\n      .catch(error => console.log(error));   \r\n  }\r\n\r\n  const getBinanceETH = () => {\r\n    axios\r\n      .get(\r\n        'https://api.binance.com/api/v3/avgPrice?symbol=ETHUSDT'\r\n      )\r\n      .then(res => {\r\n        setBinanceETH(parseFloat(res.data.price).toFixed(2))\r\n      })\r\n      .catch(error => console.log(error));   \r\n  }\r\n\r\n  const getCoinbaseETH = () => {\r\n    axios\r\n      .get(\r\n        'https://api.coinbase.com/v2/prices/ETH-USD/spot'\r\n      )\r\n      .then(res => {\r\n        setCoinbaseETH(parseFloat(res.data.data.amount).toFixed(2))\r\n      })\r\n      .catch(error => console.log(error));   \r\n  }\r\n\r\n  const getCoinGecko = () => {\r\n    axios\r\n      .get(\r\n        'https://api.coingecko.com/api/v3/coins/markets?vs_currency=usd&ids=bitcoin%2C%20ethereum&order=market_cap_desc&per_page=100&page=1&sparkline=false'\r\n      )\r\n      .then(res => {\r\n        setCoins(res.data);\r\n      })\r\n      .catch(error => console.log(error));\r\n  }\r\n\r\n  const filteredCoins = coins.filter(coin =>\r\n    coin.name.toLowerCase().includes(search.toLowerCase())\r\n  );\r\n\r\n  const switchBTC = () => {\r\n    if(binanceBTC>coinbaseBTC){\r\n      return <div className='switchBTC'>Buy Bitcoin from Coinbase for ${coinbaseBTC} and sell to Binance for ${binanceBTC}</div>\r\n    }\r\n    else{\r\n      return <div className='switchBTC'>Buy Bitcoin from Binance for ${binanceBTC} and sell to Coinbase for ${coinbaseBTC}</div>;\r\n    }\r\n  }\r\n\r\n  const switchETH = () => {\r\n    if(binanceETH>coinbaseETH){\r\n      return <div className='switchETH'>Buy Ethereum from Coinbase for ${coinbaseETH} and sell to Binance for ${binanceETH}</div>\r\n    }\r\n    else{\r\n      return <div className='switchETH'>Buy Ethereum from Binance for ${binanceETH} and sell to Coinbase for ${coinbaseETH}</div>;\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className='coin-app'>\r\n      <h1>Average Price Across Major Crypto Exchanges</h1>\r\n      {filteredCoins.map(coin => {\r\n        return (\r\n          <Coin\r\n            key={coin.id}\r\n            name={coin.name}\r\n            price={coin.current_price}\r\n            symbol={coin.symbol}\r\n            image={coin.image}\r\n          />\r\n        );\r\n      })}\r\n      <h1 className='compare-header'>Binance vs Coinbase</h1>\r\n      {switchBTC()}\r\n      {switchETH()}\r\n    </div>\r\n  );\r\n}\r\nexport default App;\r\n\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n\r\n"],"sourceRoot":""}